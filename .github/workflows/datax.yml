# This is a basic workflow to help you get started with Actions

name: Alibaba DataX

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  schedule: 
    - cron: "30 16 * * 0"
# env: 
#   IS_MILESTONE_BRANCH: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags') }}
#   IS_MILESTONE_CHANGE: ${{ (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags')) && github.event_name == 'push' }}

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  publish:
    name: Build and publish Alibaba DataX
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Checkout DataX
        uses: actions/checkout@v3
        with:
          repository: meshlake/DataX
          path: "./build/external"
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_CICD_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_CICD_TOKEN }}
      - name: Login to Meshlake Harbor
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.MESHLAKE_HARBOR_REGISTRY }}
          username: ${{ secrets.MESHLAKE_HARBOR_CICD_USERNAME }}
          password: ${{ secrets.MESHLAKE_HARBOR_CICD_TOKEN }}
      - name: Build with Maven
        working-directory: "./build/external"
        run: |
          mvn -U clean package assembly:assembly -Dmaven.test.skip=true
          du -h target/datax/
          mkdir -p ${{ github.workspace }}/apps/datax/target/
          mv target/datax/datax/* ${{ github.workspace }}/apps/datax/target/
          ls -al ${{ github.workspace }}/apps/datax/target/
          ls -al ${{ github.workspace }}/apps/datax/target/plugin/reader/
          ls -al ${{ github.workspace }}/apps/datax/target/plugin/writer/
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./apps/datax 
          file: ./apps/datax/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: meshlake/datax:0.0.1,${{ secrets.MESHLAKE_HARBOR_REGISTRY }}/alibaba/datax:0.0.1
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}